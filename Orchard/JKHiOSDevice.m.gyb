//
% warning = "This file was automatically generated and should not be edited."
// ${warning}
//
//  JKHiOSDevice.m
//  Orchard
//
//  Created by Jeff Kelley on 7/17/18.
//

#import "JKHiOSDevice.h"

#import "NSString+JKHHelpers.h"

JKHiOSDevice JKHiOSDeviceFromNSString(NSString * _Nonnull string) {

    // Disable deprecation warnings for historical accuracy
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#pragma clang diagnostic ignored "-Wunguarded-availability"

    if ([string jkh_isEqualToOneOfStrings:@[@"i386", @"x86_64"]]) {
        return JKHiOSDeviceSimulator;
    }

% import csv
% def objcString(x): return "@\"" + x + "\""
typedef NS_ENUM(NSUInteger, JKHiOSDevice) {

% with open('../iPhones.tsv') as file:
#pragma mark - iPhones

    % for row in csv.DictReader(file, delimiter='\t'):
%{
name = row["Name"]
released = row["Released"]
codes = list(map(objcString, row["Codes"].split(";")))
deprecated = row["Deprecated"]
enum_name = name.replace(" ", "").replace("(", "").replace(")","").replace(".", "_").replace("-", "").replace(",", "").replace("mini", "Mini").replace("Generation", "").replace("inch", "Inch").replace("2nd", "2").replace("3rd", "3").replace("4th", "4").replace("5th", "5").replace("6th", "6")
}%
        % if name and len(codes) == 1:
    else if ([string isEqualToString:${codes[0]}]) {
        return ${enum_name};
    }
        % elif name and len(codes) > 1:
    else if ([string jkh_isEqualToOneOfStrings:@[${", ".join(codes)}]]) {
        return ${enum_name};
    }
        % end
    % end
% end

% with open('../iPads.tsv') as file:
#pragma mark - iPads

    % for row in csv.DictReader(file, delimiter='\t'):
%{
name = row["Name"]
released = row["Released"]
codes = list(map(objcString, row["Codes"].split(";")))
deprecated = row["Deprecated"]
enum_name = name.replace(" ", "").replace("(", "").replace(")","").replace(".", "_").replace("-", "").replace(",", "").replace("mini", "Mini").replace("Generation", "").replace("inch", "Inch").replace("2nd", "2").replace("3rd", "3").replace("4th", "4").replace("5th", "5").replace("6th", "6")
}%
        % if name and len(codes) == 1:
    else if ([string isEqualToString:${codes[0]}]) {
        return ${enum_name};
    }
        % elif name and len(codes) > 1:
    else if ([string jkh_isEqualToOneOfStrings:@[${", ".join(codes)}]]) {
        return ${enum_name};
    }
        % end
    % end
% end
} NS_SWIFT_NAME(iOSDevice);

NS_ASSUME_NONNULL_END
