//
% warning = "This file was automatically generated and should not be edited."
// ${warning}
//
//  OrchardiOSDevice.h
//  Orchard
//
//  Created by Jeff Kelley on 7/17/18.
//

#import <Foundation/Foundation.h>

#if TARGET_OS_IOS

#import <UIKit/UIKit.h>

NS_ASSUME_NONNULL_BEGIN

% import sys
% sys.path.insert(0, '../../Common')
% from GYBUtilities import ( iOSDeviceFamily, DataPath, longestEnumNameLength, enumName )
% import csv
typedef NS_ENUM(NSUInteger, OrchardiOSDeviceFamily) {
% for family in iOSDeviceFamily:
    % formattedFamilyName = '{:31s}'.format("OrchardiOSDeviceFamily" + family.value)
    ${formattedFamilyName} NS_SWIFT_NAME(${family.value}),
% end
    OrchardiOSDeviceFamilySimulator NS_SWIFT_NAME(simulator),
    OrchardiOSDeviceFamilyUnknown   NS_SWIFT_NAME(unknown)
} NS_SWIFT_NAME(iOSiOSDeviceFamily);

typedef NS_ENUM(NSUInteger, OrchardiOSDevice) {

% for family in iOSDeviceFamily:
    % enumNameLength = longestEnumNameLength(family) + len("OrchardiOSDevice")
    % with open(DataPath(family)) as file:
    // ${family.value}s
        % for row in csv.DictReader(file, delimiter='\t'):
%{
name = row["Name"]
released = row["Released"]
deprecated = row["Deprecated"]
enum_name = enumName(name)
formatted_enum_name = '{:{width}s}'.format("OrchardiOSDevice" + enum_name, width=enumNameLength)

if name and released and deprecated:
    formatted_availability = '{:33s}'.format("NS_ENUM_DEPRECATED_IOS(" + released + ", " + deprecated + ")")
elif name and released:
    formatted_availability = '{:33s}'.format("NS_ENUM_AVAILABLE_IOS(" + released + ")")
}%
    ${formatted_enum_name} ${formatted_availability} NS_SWIFT_NAME(${enum_name}),
        % end
    % end

%end
    OrchardiOSDeviceSimulator NS_SWIFT_NAME(simulator),
    OrchardiOSDeviceUnknown   NS_SWIFT_NAME(unknown)

} NS_SWIFT_NAME(iOSDevice);

@interface UIDevice (Orchard)

- (OrchardiOSDevice)orchardiOSDevice;

@end

OrchardiOSDevice OrchardiOSDeviceFromNSString(NSString *string) NS_SWIFT_NAME(iOSDevice(from:));
OrchardiOSDeviceFamily OrchardiOSDeviceFamilyForiOSDevice(OrchardiOSDevice device) NS_SWIFT_NAME(iOSDeviceFamily(for:));
NSString * _Nullable OrchardMarketingNameForiOSDevice(OrchardiOSDevice device) NS_SWIFT_NAME(marketingName(for:));

NS_ASSUME_NONNULL_END

#endif
